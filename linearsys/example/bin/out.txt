Linear System Solver using Cramer's rule.
loading system's matrix...
Extended matrix of the system:
[2.00, 1.00, 1.00, 5.00]
[4.00, -6.00, 0.00, -2.00]
[-2.00, 7.00, 2.00, 9.00]

Solution:
[1.00, 1.00, 2.00]

loading coefficient's matrix...
Matrix of coefficients:
[2.00, 1.00, 1.00]
[4.00, -6.00, 0.00]
[-2.00, 7.00, 2.00]

loading coefficient's vector...
Vector of coefficients:
[5.00, -2.00, 9.00]

solution:
[1.00, 1.00, 2.00]

Linear System Solver using Gaussian elimination.
loading system's matrix...
Extended matrix of the system:
[2.00, 1.00, 1.00, 5.00]
[4.00, -6.00, 0.00, -2.00]
[-2.00, 7.00, 2.00, 9.00]

Solution:
[1.00, 1.00, 2.00]

loading coefficient's matrix...
Matrix of coefficients:
[2.00, 1.00, 1.00]
[4.00, -6.00, 0.00]
[-2.00, 7.00, 2.00]

loading coefficient's vector...
Vector of coefficients:
[5.00, -2.00, 9.00]

solution:
[1.00, 1.00, 2.00]

Linear system solver using LU decomposition.

lower:
[1.00, 0.00, 0.00]
[0.50, 1.00, 0.00]
[-0.50, 1.00, 1.00]

upper:
[4.00, -6.00, 0.00]
[0.00, 4.00, 1.00]
[0.00, 0.00, 1.00]

permutation:
[1, 0, 2]

coeficient vector:
[5.00, -2.00, 9.00]

solution:
[1.00, 1.00, 2.00]

Inverse matrix computation.

m:
[2.00, 1.00, 1.00]
[4.00, -6.00, 0.00]
[-2.00, 7.00, 2.00]

inv_m:
[0.75, -0.31, -0.38]
[0.50, -0.38, -0.25]
[-1.00, 1.00, 1.00]

m * inv_m = identity:
[1.00, 0.00, 0.00]
[0.00, 1.00, 0.00]
[0.00, 0.00, 1.00]


Building a rotation matrix r1 ...
Rotation matrix r1:
[0.85, 0.15, 0.50]
[0.15, 0.85, -0.50]
[-0.50, 0.50, 0.71]

Compute the transpose matrix of r1...
Print the transpose matrix r2:
[0.85, 0.15, -0.50]
[0.15, 0.85, 0.50]
[0.50, -0.50, 0.71]

The transposed of a rotation matrix is its inverse.
So, r1*r2=I
[1.00, -0.00, -0.00]
[-0.00, 1.00, -0.00]
[-0.00, -0.00, 1.00]

Compute QR factorization:
original matrix (A):
[2.00, 1.00, 1.00]
[4.00, -6.00, 0.00]
[-2.00, 7.00, 2.00]

q:
[0.41, 0.71, 0.58]
[0.82, 0.00, -0.58]
[-0.41, 0.71, -0.58]

r:
[4.90, -7.35, -0.41]
[-0.00, 5.66, 2.12]
[-0.00, 0.00, -0.58]

A = QR:
[2.00, 1.00, 1.00]
[4.00, -6.00, -0.00]
[-2.00, 7.00, 2.00]

q is orthogonal = 1
Q is orthonormal = 1
det(A) = -16.00

Solve linear system using QR factorization:
Coefficient's vector:
[5.00, -2.00, 9.00]

System solution:
[1.00, 1.00, 2.00]

Eigen:
Matrix:
[2.00, 1.00, 1.00]
[4.00, -6.00, 0.00]
[-2.00, 7.00, 2.00]

Find the max Eigen using the Power Method:
eigenvalue = -6.06
eigenvector:
[-0.02, 1.00, -0.87]

Find the eigensystem using the QR Algorithm:
EigenSystem:
eigenvalue = -6.06
eigenvector:
[0.00, -0.15, 0.13]

eigenvalue = 3.25
eigenvector:
[0.58, 0.25, 0.48]

eigenvalue = 0.81
eigenvector:
[-0.08, -0.05, 0.14]

singular Value Decomposition
M:
[1.50, -0.50, 7.40]
[-1.00, -1.80, 5.20]

SVD:
U:
[0.81, -0.58]
[0.58, 0.81]

Sigma:
[-9.18, 0.00, 0.00]
[0.00, -2.06, 0.00]

V:
[-0.07, 0.82, -0.57]
[0.16, 0.57, 0.81]
[-0.98, 0.03, 0.17]

U is orthogonal = 1
V is orthogonal = 1
U is orthonormal = 1
V is orthonormal = 1

det(U) = 1.00
det(V) = -1.00

M = UDV^t:
[1.50, -0.50, 7.40]
[-1.00, -1.80, 5.20]

bye.
